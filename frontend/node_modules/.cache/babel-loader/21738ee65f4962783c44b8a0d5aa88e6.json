{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/DashboardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dashboard from './Dashboard';\nimport Dashboardform from './Dashboardform';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardList() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = task => {\n    if (!task.text || /^\\s*$/.test(task.text)) {\n      return;\n    }\n\n    const newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  };\n\n  const updateTask = (taskId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTasks(prev => prev.map(item => item.id === taskId ? newValue : item));\n  };\n\n  const removeTask = id => {\n    const removeArr = [...tasks].filter(task => task.id !== id);\n    setTasks(removeArr);\n  };\n\n  const completeTask = id => {\n    let updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.isComplete = !task.isComplete;\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks to be completed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dashboardform, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      tasks: tasks,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      updateTask: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"\\\\calendar\",\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = DashboardList;\nexport default DashboardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardList\");","map":{"version":3,"sources":["/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/DashboardList.js"],"names":["React","useState","Dashboard","Dashboardform","DashboardList","tasks","setTasks","addTask","task","text","test","newTasks","updateTask","taskId","newValue","prev","map","item","id","removeTask","removeArr","filter","completeTask","updatedTasks","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAA0C;AACtC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GARD;;AAWA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACrC,QAAG,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAArB,EAAkD;AAC9C;AACH;;AAEDH,IAAAA,QAAQ,CAACS,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;AAEH,GAPD;;AASA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACrB,UAAME,SAAS,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAkBb,IAAI,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAtC,CAAlB;AAEAZ,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACH,GAJD;;AAOA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AACvB,QAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAN,CAAUR,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACU,EAAL,KAAYA,EAAhB,EAAoB;AAChBV,QAAAA,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;AACH;;AACD,aAAOhB,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACiB,YAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAE,UAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEhB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AACA,MAAA,KAAK,EAAEF,KADP;AACc,MAAA,YAAY,EAAEiB,YAD5B;AAC0C,MAAA,UAAU,EAAEH,UADtD;AACkE,MAAA,UAAU,EAAGP;AAD/E;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAG,MAAA,IAAI,EAAG,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAnDQR,a;;KAAAA,a;AAqDT,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport Dashboard from './Dashboard';\nimport Dashboardform from './Dashboardform'\n\nfunction DashboardList() {\n    const [tasks, setTasks] = useState([])\n\n    const addTask = task => {\n        if(!task.text || /^\\s*$/.test(task.text)) {\n            return\n        }\n        \n        const newTasks = [task, ...tasks]\n\n        setTasks(newTasks)\n    };\n\n    \n    const updateTask = (taskId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTasks(prev => prev.map(item => (item.id === taskId ? newValue : item)));\n\n    };\n    \n    const removeTask = id => {\n        const removeArr = [...tasks].filter(task => task.id !== id)\n\n        setTasks(removeArr)\n    }\n\n\n    const completeTask = id => {\n        let updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                task.isComplete = !task.isComplete\n            }\n            return task\n        });\n        setTasks(updatedTasks);\n    }\n\n    return (\n        <div className ='task-app'>\n            <h1>Tasks to be completed!</h1>\n            <Dashboardform onSubmit={addTask} />\n            <Dashboard \n            tasks={tasks} completeTask={completeTask} removeTask={removeTask} updateTask ={updateTask}/>\n            <a href = \"\\calendar\">Calendar</a>\n            \n        </div>\n        \n    )\n}\n\nexport default DashboardList\n"]},"metadata":{},"sourceType":"module"}