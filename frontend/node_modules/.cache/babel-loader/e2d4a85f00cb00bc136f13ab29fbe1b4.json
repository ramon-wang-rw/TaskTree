{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TaskTree\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dashboardform from './Dashboardform';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard({\n  tasks,\n  completeTask,\n  removeTask,\n  updateTask\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTask(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(Dashboardform, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  return tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: task.isCOmplete ? 'task-row complete' : 'task-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTask(task.id),\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTask(task.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: task.id,\n          value: task.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Dashboard, \"Lk+zX9mM8RlzHTP2VTuh+tHke4Q=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/wangr/OneDrive/Documents/GitHub/TaskTree/frontend/src/components/Dashboard.js"],"names":["React","useState","Dashboardform","RiCloseCircleLine","TiEdit","Dashboard","tasks","completeTask","removeTask","updateTask","edit","setEdit","id","value","submitUpdate","map","task","index","isCOmplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAAnB,EAAkE;AAAA;;AAC9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAC,IADC;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEF,IAArB;AAA2B,MAAA,QAAQ,EAAEI;AAArC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AACI,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADvD;AAAA,4BAII;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAA9C;AAAA,gBACKI,IAAI,CAACG;AADV,OAAUH,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AACA,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CADzB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AACA,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAV;AAAcC,UAAAA,KAAK,EAAEG,IAAI,CAACG;AAA1B,SAAD,CADtB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAESF,KAFT;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAqBH;;GAxCQZ,S;;KAAAA,S;AA0CT,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Dashboardform from './Dashboardform';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Dashboard({tasks, completeTask, removeTask, updateTask}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTask(edit.id, value)\r\n        setEdit({\r\n            id:null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <Dashboardform edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n\r\n    return tasks.map((task, index) => (\r\n        <div \r\n            className={task.isCOmplete ? 'task-row complete' : 'task-row'} \r\n            key={index}\r\n        >\r\n            <div key={task.id} onClick={() => completeTask(task.id)}>\r\n                {task.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                onClick={() => removeTask(task.id)}\r\n                className='delete-icon'\r\n                />\r\n                <TiEdit \r\n                onClick={() => setEdit({id: task.id, value: task.text} )}\r\n                className='edit-icon'\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    ));\r\n}\r\n\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}