{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/oldLogin.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n      console.log(userData);\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    console.log(errors);\n    console.log(this.state.errors);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#A6CEB6\"\n        },\n        align: \"middle\",\n        children: \"Login form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        align: \"middle\",\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          onChange: this.onChange,\n          value: this.state.username,\n          error: errors.username,\n          className: classnames(\"\", {\n            invalid: errors.username || errors.userNotFound\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-text\",\n          children: [errors.username, errors.userNotFound]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          onChange: this.onChange,\n          value: this.state.password,\n          error: errors.password,\n          className: classnames(\"\", {\n            invalid: errors.password || errors.passwordIncorrect\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-text\",\n          children: [errors.password, errors.passwordIncorrect]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"\",\n        className: \"btn-flat waves-effect\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons left\",\n          children: \"keyboard_backspace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), \" Back to Register\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/oldLogin.js"],"names":["React","Component","Link","PropTypes","connect","loginUser","classnames","Login","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","username","state","password","props","console","log","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","color","invalid","userNotFound","passwordIncorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const userData = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.loginUser(userData);\n    console.log(userData);\n  };\n  render() {\n    const { errors } = this.state;\n    console.log(errors);\n    console.log(this.state.errors);\n\n    return (\n      <div className=\"container\">\n        <h1 style={{ color: \"#A6CEB6\" }} align=\"middle\">\n          Login form\n        </h1>\n        <form align=\"middle\" onSubmit={this.onSubmit}>\n          <label>Username: </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            onChange={this.onChange}\n            value={this.state.username}\n            error={errors.username}\n            className={classnames(\"\", {\n              invalid: errors.username || errors.userNotFound,\n            })}\n          ></input>\n          <span className=\"red-text\">\n            {errors.username}\n            {errors.userNotFound}\n          </span>\n          <br />\n          <br />\n          <label>Password: </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            className={classnames(\"\", {\n              invalid: errors.password || errors.passwordIncorrect,\n            })}\n          ></input>\n          <span className=\"red-text\">\n            {errors.password}\n            {errors.passwordIncorrect}\n          </span>\n          <br />\n          <br />\n          <input type=\"submit\" value=\"Log In\"></input>\n        </form>\n        <Link to=\"\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to Register\n            </Link>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n"]},"metadata":{},"sourceType":"module"}