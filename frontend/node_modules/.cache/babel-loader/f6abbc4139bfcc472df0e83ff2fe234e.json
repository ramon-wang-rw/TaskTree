{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Calendar.js\";\nimport React, { useRef, useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport AddEventModal from './AddEventModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [modalOpen, setModalOpen] = useState(false);\n  const calendarRef = useRef(null);\n\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Calendar.js"],"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","modalOpen","setModalOpen","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","position","zIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,eAAe,YAAY;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMM,WAAW,GAAGP,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAIC,WAAW,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,MAApB,EAAlB;AACAF,IAAAA,WAAW,CAACG,QAAZ,CAAqBJ,KAArB;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAK,MAAA,KAAK,EAAG;AAACQ,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAb;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,GAAG,EAAER,WADT;AAEI,QAAA,OAAO,EAAE,CAACJ,aAAD,CAFb;AAGI,QAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFR,eAUI,QAAC,aAAD;AACA,MAAA,MAAM,EAAEE,SADR;AAEA,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF3B;AAGA,MAAA,YAAY,EAAEG,KAAK,IAAID,YAAY,CAACC,KAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport AddEventModal from './AddEventModal';\n\nexport default function () {\n    const [modalOpen, setModalOpen] = useState(false);\n    const calendarRef = useRef(null);\n\n    const onEventAdded = event => {\n        let calendarApi = calendarRef.current.getApi()\n        calendarApi.addEvent(event);\n    }\n\n    return (\n        <section>\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\n                <div style ={{position: \"relative\", zIndex: 0}}>\n                    <FullCalendar\n                        ref={calendarRef}\n                        plugins={[dayGridPlugin]}\n                        initialView=\"dayGridMonth\"\n                    />\n                </div>\n\n            <AddEventModal \n            isOpen={modalOpen} \n            onClose={() => setModalOpen(false)} \n            onEventAdded={event => onEventAdded(event)}\n            />\n\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}