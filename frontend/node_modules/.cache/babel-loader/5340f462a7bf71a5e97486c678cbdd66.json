{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Dashboardform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboardform(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 1000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"dashboard-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your task\",\n        value: input,\n        name: \"text\",\n        className: \"task-input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"test\",\n        onClick: handleSubmit,\n        className: \"task-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-task\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"new-task\",\n        type: \"text\",\n        placeholder: \"Add a task\",\n        value: input,\n        name: \"text\",\n        className: \"task-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"task-button\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboardform, \"GaPkIgsAGbjgVrcgXZQ8088YCs4=\");\n\n_c = Dashboardform;\nexport default Dashboardform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboardform\");","map":{"version":3,"sources":["/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Dashboardform.js"],"names":["React","useState","useEffect","useRef","Dashboardform","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAA+B,EAAhC,CAAlC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADO;AAEXC,MAAAA,IAAI,EAAEjB;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAWA,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAES,YAA3C;AAAA,cACKX,KAAK,CAACG,IAAN,gBACG;AAAA,8BACJ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,kBAFhB;AAGI,QAAA,KAAK,EAAEF,KAHX;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,SAAS,EAAC,iBALd;AAMI,QAAA,QAAQ,EAAEO,YANd;AAOI,QAAA,GAAG,EAAEH;AAPT;AAAA;AAAA;AAAA;AAAA,cADI,eAUJ;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAEM,YAA3B;AAAyC,QAAA,SAAS,EAAC,kBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVI;AAAA,oBADH,gBAeD;AAAA,8BACA;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,YAHhB;AAII,QAAA,KAAK,EAAEV,KAJX;AAKI,QAAA,IAAI,EAAC,MALT;AAMI,QAAA,SAAS,EAAC,YANd;AAOI,QAAA,QAAQ,EAAEO,YAPd;AAQI,QAAA,GAAG,EAAEH;AART;AAAA;AAAA;AAAA;AAAA,cAHA,eAaA;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GA5DQZ,a;;KAAAA,a;AA8DT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Dashboardform(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value: '');\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 1000),\n            text: input\n        });\n\n        setInput('');\n    };\n\n    return (\n        <form className=\"dashboard-form\" onSubmit={handleSubmit}>\n            {props.edit ? ( \n                <>\n            <input \n                type=\"text\" \n                placeholder=\"Update your task\" \n                value={input}\n                name=\"text\"\n                className='task-input edit'\n                onChange={handleChange}\n                ref={inputRef}\n            />\n            <button id=\"test\" onClick={handleSubmit} className=\"task-button edit\">Update</button>\n            </>\n            ) :\n            (\n            <>\n            <label htmlFor=\"new-task\">What needs to be done?</label>\n            <br />\n            <input \n                id=\"new-task\"\n                type=\"text\" \n                placeholder=\"Add a task\" \n                value={input}\n                name=\"text\"\n                className='task-input'\n                onChange={handleChange}\n                ref={inputRef}\n            />\n            <button onClick={handleSubmit} className=\"task-button\">Add task</button>\n            </>\n            )}\n            \n        </form>\n    );\n}\n\nexport default Dashboardform;"]},"metadata":{},"sourceType":"module"}