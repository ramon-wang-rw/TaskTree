[{"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/index.js":"1","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reportWebVitals.js":"2","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/App.js":"3","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Dashboard.js":"4","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/store.js":"5","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Dashboardform.js":"6","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/oldLogin.js":"7","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/oldRegister.js":"8","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/forgotPage.js":"9","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/DashboardList.js":"10","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Calendar.js":"11","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/private-route/PrivateRoute.js":"12","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/actions/authActions.js":"13","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/utils/setAuthToken.js":"14","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/dashboard/Dashboard.js":"15","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/AddEventModal.js":"16","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/actions/types.js":"17","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reducers/rootReducer.js":"18","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reducers/errorReducer.js":"19","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reducers/authReducer.js":"20"},{"size":554,"mtime":1637181496253,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1636666893320,"results":"23","hashOfConfig":"22"},{"size":2552,"mtime":1637181593788,"results":"24","hashOfConfig":"22"},{"size":1267,"mtime":1637181593789,"results":"25","hashOfConfig":"22"},{"size":422,"mtime":1636677104299,"results":"26","hashOfConfig":"22"},{"size":1866,"mtime":1637181593790,"results":"27","hashOfConfig":"22"},{"size":3089,"mtime":1637181593791,"results":"28","hashOfConfig":"22"},{"size":3303,"mtime":1637181593791,"results":"29","hashOfConfig":"22"},{"size":492,"mtime":1636666893317,"results":"30","hashOfConfig":"22"},{"size":1478,"mtime":1637181593789,"results":"31","hashOfConfig":"22"},{"size":1854,"mtime":1637181593789,"results":"32","hashOfConfig":"22"},{"size":592,"mtime":1636677104298,"results":"33","hashOfConfig":"22"},{"size":1761,"mtime":1637181593788,"results":"34","hashOfConfig":"22"},{"size":331,"mtime":1636677104299,"results":"35","hashOfConfig":"22"},{"size":3858,"mtime":1637182513413,"results":"36","hashOfConfig":"22"},{"size":1155,"mtime":1636666893314,"results":"37","hashOfConfig":"22"},{"size":136,"mtime":1636677104297,"results":"38","hashOfConfig":"22"},{"size":207,"mtime":1636677104299,"results":"39","hashOfConfig":"22"},{"size":243,"mtime":1636677104299,"results":"40","hashOfConfig":"22"},{"size":546,"mtime":1636677104299,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"15uf6ip",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/index.js",[],["89","90"],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reportWebVitals.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/App.js",["91","92","93","94"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Register from \"./components/oldRegister\";\nimport Login from \"./components/oldLogin\";\nimport Forgot from \"./components/forgotPage\";\nimport dashboard from \"./components/Dashboard.js\";\nimport Dashboardform from \"./components/Dashboardform\";\nimport DashboardList from \"./components/DashboardList\";\nimport Modal from \"react-modal\";\nimport \"react-datetime/css/react-datetime.css\";\nimport Calendar from \"./components/Calendar\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"container\">\n          {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\n            <Link to=\"/register\" className=\"nav-link\">register Page</Link>\n          </nav>\n          <br/> */}\n          <Route path=\"/\" exact component={Register} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/forgot\" exact component={Forgot} />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/dashboardform\" exact component={Dashboardform} />\n          <Route path=\"/dashboardlist\" exact component={DashboardList} />\n          <Route path=\"/calendar\" exact component={Calendar} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Dashboard.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/store.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Dashboardform.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/oldLogin.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/oldRegister.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/forgotPage.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/DashboardList.js",["95","96","97"],"import React, {useEffect, useState} from 'react'\nimport Dashboard from './Dashboard';\nimport Dashboardform from './Dashboardform'\nimport axios from 'axios';\nimport moment from 'moment';\n\nfunction DashboardList() {\n    const [tasks, setTasks] = useState([])\n\n    const addTask = task => {\n        if(!task.text || /^\\s*$/.test(task.text)) {\n            return\n        }\n        \n        const newTasks = [task, ...tasks]\n\n        setTasks(newTasks)\n    };\n\n    \n    const updateTask = (taskId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return\n        }\n\n        setTasks(prev => prev.map(item => (item.id === taskId ? newValue : item)));\n\n    };\n    \n    const removeTask = id => {\n        const removeArr = [...tasks].filter(task => task.id !== id)\n\n        setTasks(removeArr)\n    }\n\n\n    const completeTask = id => {\n        let updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                task.isComplete = !task.isComplete\n            }\n            return task\n        });\n        setTasks(updatedTasks);\n    }\n\n    return (\n        <div className ='task-app'>\n            <h1>Tasks to be completed!</h1>\n            <Dashboardform onSubmit={addTask} />\n            <Dashboard \n            tasks={tasks} completeTask={completeTask} removeTask={removeTask} updateTask ={updateTask}/>\n            <a href = \"\\calendar\">Calendar</a>\n            \n        </div>\n        \n    )\n}\n\nexport default DashboardList\n","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/Calendar.js",["98"],"import React, { useRef, useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport AddEventModal from './AddEventModal';\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nexport default function () {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [events, setEvents] = useState([]);\n    const calendarRef = useRef(null);\n\n    const onEventAdded = event => {\n        let calendarApi = calendarRef.current.getApi()\n        calendarApi.addEvent({\n            start: moment(event.start).toDate(),\n            end: moment(event.end).toDate(),\n            title: event.title\n        });\n    };\n\n    async function handleEventAdd(data) {\n        await axios.post('/api/calendar/create-event', data.event);\n        console.log('works', data.event);\n    }\n\n    async function handleDatesSet(data) {\n        const response = await axios.get(\"/api/calendar/get-events?start=\" +moment(data.start).toISOString() +\"&end=\"+moment(data.end).toISOString())\n        setEvents(response.data);\n    }\n\n    return (\n        <section>\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\n                <div style ={{position: \"relative\", zIndex: 0}}>\n                    <FullCalendar\n                        ref={calendarRef}\n                        events={events}\n                        plugins={[dayGridPlugin]}\n                        initialView=\"dayGridMonth\"\n                        eventAdd={(event) => handleEventAdd(event)}\n                        datesSet ={(date) => handleDatesSet(date)}\n                    />\n                </div>\n\n            <AddEventModal \n            isOpen={modalOpen} \n            onClose={() => setModalOpen(false)} \n            onEventAdded={event => onEventAdded(event)}\n            />\n\n        </section>\n    )\n}","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/private-route/PrivateRoute.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/actions/authActions.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/utils/setAuthToken.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/dashboard/Dashboard.js",["99","100"],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/components/AddEventModal.js",["101"],"import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport Datetime from 'react-datetime';\n\nexport default function ({isOpen, onClose, onEventAdded}) {\n    const[title, setTitle] = useState(\"\");\n    const[start, setStart] = useState(new Date());\n    const[end, setEnd] = useState(new Date());\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        onEventAdded({\n            title,\n            start,\n            end\n        })\n        onClose();\n    }\n\n    return (\n        <Modal isOpen={isOpen} onRequestClose={onClose}>\n            <form onSubmit={onSubmit}>\n                <input placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} />\n\n                <div>\n                    <label>Start Date</label>\n                    <Datetime value={start} onChange={date => setStart(date)} />\n                </div>\n\n                <div>\n                    <label>End Date</label>\n                    <Datetime value={end} onChange={date => setEnd(date)} />\n                </div>\n\n                <button>Add event</button>\n\n\n                 \n            </form>\n        </Modal>\n    )\n}","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/actions/types.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reducers/rootReducer.js",[],"/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reducers/errorReducer.js",["102"],"import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/Users/alexandrajaccard/Documents/GitHub/TaskTree/frontend/src/reducers/authReducer.js",["103"],"import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":12},{"ruleId":"108","severity":1,"message":"112","line":3,"column":50,"nodeType":"110","messageId":"111","endLine":3,"endColumn":54},{"ruleId":"108","severity":1,"message":"113","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":17},{"ruleId":"108","severity":1,"message":"114","line":14,"column":8,"nodeType":"110","messageId":"111","endLine":14,"endColumn":13},{"ruleId":"108","severity":1,"message":"115","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"116","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"108","severity":1,"message":"117","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":8,"column":1,"nodeType":"120","endLine":54,"endColumn":2},{"ruleId":"108","severity":1,"message":"112","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"108","severity":1,"message":"121","line":6,"column":26,"nodeType":"110","messageId":"111","endLine":6,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":5,"column":1,"nodeType":"120","endLine":43,"endColumn":2},{"ruleId":"118","severity":1,"message":"119","line":3,"column":1,"nodeType":"120","endLine":10,"endColumn":2},{"ruleId":"118","severity":1,"message":"119","line":9,"column":1,"nodeType":"120","endLine":25,"endColumn":2},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'dashboard' is defined but never used.","'Modal' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'moment' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Table' is defined but never used.","no-global-assign","no-unsafe-negation"]